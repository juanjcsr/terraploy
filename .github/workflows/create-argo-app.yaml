name: build docker image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_to_build: ${{ steps.get_diff.outputs.image_to_build }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
    
    - name: get app to build
      id: get_app_to_build
      uses: ./.github/actions/get-modified-files
      with:
        folder_to_watch: apps
        
    - name: Build Docker Image
      run: |
        IMAGE_TO_BUILD=${{  needs.get_app_to_build.outputs.app_to_deploy }}
        echo "image_to_build=$(echo $IMAGE_TO_BUILD)" >> $GITHUB_ENV
        docker build -t ${{ env.DOCKERHUB_USERNAME }}/$IMAGE_TO_BUILD:$GITHUB_SHA -f apps/$IMAGE_TO_BUILD/Dockerfile apps/$IMAGE_TO_BUILD
      if: |
        needs.get_app_to_build.outputs.app_to_deploy != ''
    - name: Push Docker Image
      run: |
        docker push ${{ env.DOCKERHUB_USERNAME }}/${{env.image_to_build}}:$GITHUB_SHA
      if: |
        github.event_name != 'pull_request' &&
        needs.get_app_to_build.outputs.app_to_deploy != ''

    - name: create argo application
      if: |
        github.event_name != 'pull_request' &&
        needs.get_app_to_build.outputs.app_to_deploy != ''
      run: |
        if [ -z "${{env.image_to_build}}" ] && [ -f "charts/${{env.image_to_build}}" ]; then
          echo "file exists"
        else
          echo "file does not exist"
          mkdir -p charts/${{env.image_to_build}} 
          helm template charts/applicationtemplate -s templates/application.yaml --values definition/${{env.image_to_build}}/values.yaml >> charts/root-app/templates/${{env.image_to_build}}.yaml
          git add charts/root-app/templates/${{env.image_to_build}}.yaml
          mkdir -p charts/${{env.image_to_build}}/templates
          helm template charts/applicationtemplate -s templates/chart.yaml --values definition/simpleserver/values.yaml > charts/${{env.image_to_build}}/Chart.yaml
          git add charts/${{env.image_to_build}}/Chart.yaml
        fi
        sed -i 's/tag: .*/tag: '${{ github.sha }}'/g' definition/${{env.image_to_build}}/values.yaml
        #helm template ${{env.image_to_build}} charts/defaultapptemplate --values definition/${{env.image_to_build}}/values.yaml > charts/${{env.image_to_build}}/templates/app.yaml
        #git add charts/${{env.image_to_build}}/templates/app.yaml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add definition/${{env.image_to_build}}/values.yaml
        git commit -m "update ${{env.image_to_build}} image tag"
        git push


  update:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: get app to build
      uses: ./.github/actions/get-modified-files
      with:
        folder_to_watch: definition
    - name: Update Helm Chart
      if: |
        needs.get_app_to_build.outputs.app_to_deploy != ''
      run: |
        git pull
        #git checkout -b update-chart
        #git pull origin update-chart
        helm template ${{needs.get_app_to_build.outputs.app_to_deploy}} charts/defaultapptemplate --values definition/${{needs.get_app_to_build.outputs.app_to_deploy}}/values.yaml > charts/${{needs.get_app_to_build.outputs.app_to_deploy}}/templates/app.yaml
        git add charts/${{needs.get_app_to_build.outputs.app_to_deploy}}/templates/app.yaml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git commit -m "update ${{needs.get_app_to_build.outputs.app_to_deploy}} values"
        git push

      
    
