name: build docker image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKER_KEY }}

jobs:

  get-app-to-build:
    uses: ./.github/workflows/get-modified-files.yaml

  
  build:
    needs: get-app-to-build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: validate image to build
      run: |
        echo "LOLO"
        echo ${{  needs.get-app-to-build.outputs.app_to_deploy }}
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    
  
        
    - name: Build Docker Image
      run: |
        IMAGE_TO_BUILD=${{  needs.get-app-to-build.outputs.app_to_deploy }}
        echo "LOLO"
        echo ${{  needs.get-app-to-build.outputs.app_to_deploy }}
        echo "app_to_deploy=$(echo $IMAGE_TO_BUILD)" >> $GITHUB_ENV
        docker build -t ${{ env.DOCKERHUB_USERNAME }}/$IMAGE_TO_BUILD:$GITHUB_SHA -f apps/$IMAGE_TO_BUILD/Dockerfile apps/$IMAGE_TO_BUILD
      if: |
        needs.get-app-to-build.outputs.app_to_deploy != ''
    - name: Push Docker Image
      run: |
        docker push ${{ env.DOCKERHUB_USERNAME }}/${{env.app_to_deploy}}:$GITHUB_SHA
      if: |
        github.event_name != 'pull_request' &&
        needs.get-app-to-build.outputs.app_to_deploy != ''

    - name: create argo application
      if: |
        github.event_name != 'pull_request' &&
        needs.get-app-to-build.outputs.app_to_deploy != ''
      run: |
        if [ -z "${{env.app_to_deploy}}" ] && [ -f "charts/${{env.app_to_deploy}}" ]; then
          echo "file exists"
        else
          echo "file does not exist"
          mkdir -p charts/${{env.app_to_deploy}} 
          helm template charts/applicationtemplate -s templates/application.yaml --values definition/${{env.app_to_deploy}}/values.yaml >> charts/root-app/templates/${{env.app_to_deploy}}.yaml
          git add charts/root-app/templates/${{env.app_to_deploy}}.yaml
          mkdir -p charts/${{env.app_to_deploy}}/templates
          helm template charts/applicationtemplate -s templates/chart.yaml --values definition/simpleserver/values.yaml > charts/${{env.app_to_deploy}}/Chart.yaml
          git add charts/${{env.app_to_deploy}}/Chart.yaml
        fi
        sed -i 's/tag: .*/tag: '${{ github.sha }}'/g' definition/${{env.app_to_deploy}}/values.yaml
        #helm template ${{env.app_to_deploy}} charts/defaultapptemplate --values definition/${{env.app_to_deploy}}/values.yaml > charts/${{env.app_to_deploy}}/templates/app.yaml
        #git add charts/${{env.app_to_deploy}}/templates/app.yaml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add definition/${{env.app_to_deploy}}/values.yaml
        git commit -m "update ${{env.app_to_deploy}} image tag"
        git push


  update:
    runs-on: ubuntu-latest
    needs: [get-app-to-build, build]
    if: ${{ always() }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Update Helm Chart
      if: |
        needs.get-app-to-build.outputs.app_to_deploy != ''
      run: |
        git pull
        helm template ${{needs.get-app-to-build.outputs.app_to_deploy}} charts/defaultapptemplate --values definition/${{needs.get-app-to-build.outputs.app_to_deploy}}/values.yaml > charts/${{needs.get-app-to-build.outputs.app_to_deploy}}/templates/app.yaml
        git add charts/${{needs.get-app-to-build.outputs.app_to_deploy}}/templates/app.yaml
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git commit -m "update ${{needs.get-app-to-build.outputs.app_to_deploy}} values"
        git push

      
    
